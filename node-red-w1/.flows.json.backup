[
    {
        "id": "3f98de411a14795f",
        "type": "tab",
        "label": "w1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a7ee79b859321ba0",
        "type": "group",
        "z": "3f98de411a14795f",
        "style": {
            "stroke": "#2e333a",
            "stroke-opacity": "1",
            "fill": "#383c45",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#dddddd"
        },
        "nodes": [
            "0f2b4a116f74db6c",
            "9e300191b3479508",
            "c44a347c1cc332c1",
            "83657ce0f0ea43df",
            "4fda174dd9ccb472",
            "a6a6514effc01b4a",
            "e1bcd99f64514ce4",
            "41b2418157b93e9d"
        ],
        "x": 214,
        "y": 139,
        "w": 732,
        "h": 242
    },
    {
        "id": "a0efbb89.5e42d8",
        "type": "redis-config",
        "name": "local",
        "options": "redis://:Yz25RAdGgkFg@redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "0f2b4a116f74db6c",
        "type": "inject",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "name": "Init Worker 2",
        "props": [
            {
                "p": "payload",
                "v": "true",
                "t": "bool"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "bool",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "9e300191b3479508"
            ]
        ]
    },
    {
        "id": "9e300191b3479508",
        "type": "function",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "name": "Worker 2: Init",
        "func": "// ==== Настройка ====\nlet redis = context.global.get('redis');\n\n// Используем context.flow для получения ID воркера, если он уже существует, иначе генерируем новый\nconst workerId = context.flow.get('workerId') || 'worker:' + RED.util.generateId();\ncontext.flow.set('workerId', workerId);\n\n// Регистрируем воркера\n(async () => await redis.set(workerId, 1))();\nnode.status({fill:\"green\",shape:\"dot\",text:\"Воркер запущен:\" + workerId});\n\nmsg.workerID = workerId;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c44a347c1cc332c1",
        "type": "function",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "name": "Worker 2: Process Job",
        "func": "// ==== Настройка ====\nlet redis = context.global.get('redis');\n\n(async () => {\n    try {\n        // Получаем ID воркера из контекста Flow\n        const workerId = context.flow.get('workerId');\n        // Получаем сообщение\n        let task = msg.payload;\n        // Проверяем, предназначено ли сообщение этому воркеру\n        if (msg.payload.workerId !== workerId) {\n            return; // Если нет, выходим из функции\n        }\n        node.warn('Воркер '+ workerId+' получил задачу');\n\n        // Добавляем startTime и finishTime в taskData\n        const startTime = task.startTime;\n\n        // Создаем финальный объект для отправки\n        const finalData = {\n            startTime: startTime,\n            task: task.task,\n            bot_data: task.bot_data, // Добавляем данные бота\n            workerId: workerId,  // Добавляем workerId\n            bot_id: task.task.bot_id // Добавляем bot_id\n        };\n\n        // Имитация выполнения задачи\n        await new Promise(resolve => setTimeout(resolve, Math.random() * (30 - 10) + 10));\n\n        msg.payload = finalData;\n        msg.topic = \"fjob\";\n\n        node.send(msg);\n    } catch (err) {\n        node.error(\"Ошибка : \" + err);\n        return [null, { error: 'Ошибка ', details: err }];\n    }\n})();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "e1bcd99f64514ce4",
                "41b2418157b93e9d"
            ]
        ]
    },
    {
        "id": "83657ce0f0ea43df",
        "type": "redis-in",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "server": "a0efbb89.5e42d8",
        "command": "subscribe",
        "name": "job",
        "topic": "job",
        "obj": true,
        "timeout": 0,
        "x": 310,
        "y": 280,
        "wires": [
            [
                "4fda174dd9ccb472",
                "c44a347c1cc332c1"
            ]
        ]
    },
    {
        "id": "4fda174dd9ccb472",
        "type": "debug",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 340,
        "wires": []
    },
    {
        "id": "a6a6514effc01b4a",
        "type": "redis-out",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "server": "a0efbb89.5e42d8",
        "command": "publish",
        "name": "",
        "topic": "fjob",
        "obj": true,
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "e1bcd99f64514ce4",
        "type": "delay",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "name": "",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "1",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 720,
        "y": 280,
        "wires": [
            [
                "a6a6514effc01b4a"
            ]
        ]
    },
    {
        "id": "41b2418157b93e9d",
        "type": "debug",
        "z": "3f98de411a14795f",
        "g": "a7ee79b859321ba0",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 340,
        "wires": []
    },
    {
        "id": "5a8026e37a9baafe",
        "type": "redis-instance",
        "z": "3f98de411a14795f",
        "server": "a0efbb89.5e42d8",
        "name": "",
        "topic": "redis",
        "location": "global",
        "x": 390,
        "y": 60,
        "wires": []
    }
]